(in-package #:lisphys)

(defsuite RigidBodySuite (LisPhysSuite))

(deftest test-rigid-body-api (RigidBodySuite)
    (let* ((l0 1.5)
	   (l1 1.5)
	   (l2 1.5)
	   (r0 (/ l0 2))
	   (r1 (/ l1 2))
	   (r2 (/ l2 2))
	   (tw1 #t((0 0 0 ad) 
		   (0 0 1 ad)))
	   (tw2 #t((0 (- l0) 0 ad) 
		   ((- 1) 0 0 ad)))
	   (tw3 #t(( 0 (- l0) l1 ad) 
		   ((- 1) 0 0 ad)))
	   (g_l1_s_0 #d((0 0 r0 ad)
			(0 0 0 1 ad)))
	   (g_l2_s_0 #d((0 r1 l0 ad)
			(0 0 0 1 ad)))
	   (g_l3_s_0 #d ((0 (+ l1 r2) l0 ad)
			 (0 0 0 1 ad)))
	   (g_l2_l1_0 #d ((0 r1 r0 ad)
			  (0 0 0 1 ad)))
	   (g_l3_l2_0 #d ((0 (+ r1 r2) 0 ad)
			       (0 0 0 1 ad)))
	   (q1 (random (* 2 pi)))
	   (q2 (random (* 2 pi)))
	   (q3 (random (* 2 pi)))
	   l1_s l2_s l3_s)
      (progn
	(make-hinge h1 #v(0 0 1 ad) #v(0 0 r0 ad))
	(make-hinge h2 #v((- 1) 0 0 ad) #v(0 0 r0 ad))
	(make-hinge h3 #v((- 1) 0 0 ad) #v(0 r1 0 ad))
	(labels ((g_l1_s (q1 q2 q3)
	 	   (.* (h1 q1) g_l1_s_0 ))
	 	 (g_l2_s (q1 q2 q3)
	 	   (.* (.exp (.* tw1 q1)) (.* (.exp (.* tw2 q2)) g_l2_s_0)))
	 	 (g_l3_s (q1 q2 q3)
	 	   (.* (.exp (.* tw1 q1)) (.* (.* (.exp (.* tw2 q2)) (.exp (.* tw3 q3))) g_l3_s_0)))
	 	 (g_l1_s# (q1 q2 q3)
	 	   (.* (.exp (.* tw1 q1)) g_l1_s_0 ))
	 	 (g_l2_s# (q1 q2 q3)
	 	   (.* (.* (g_l1_s q1 q2 q3) (h2 q2)) g_l2_l1_0))
	 	 (g_l3_s# (q1 q2 q3)
	 	   (.* (.* (g_l2_s# q1 q2 q3) (h3 q3)) g_l3_l2_0)))
	  (setq l1_s (.* (inv (g_l1_s q1 q2 q3)) (g_l1_s# q1 q2 q3)))
	  (setq l2_s (.* (inv (g_l2_s q1 q2 q3)) (g_l2_s# q1 q2 q3)))
	  (setq l3_s (.* (inv (g_l3_s q1 q2 q3)) (g_l3_s# q1 q2 q3)))
	  (assert-true (< (norm (val (pos l1_s))) 1e-9))
	  (assert-true (< (norm (val (pos l2_s))) 1e-9))
	  (assert-true (< (norm (val (pos l3_s))) 1e-9)))
	)))

(run-suite 'RigidBodySuite)
